<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:esri="http://www.esri.com/2008/ags"
			   xmlns:s="library://ns.adobe.com/flex/spark">
	
	<fx:Script>
		<![CDATA[
			import com.esri.ags.FeatureSet;
			import com.esri.ags.Graphic;
			import com.esri.ags.events.GeometryServiceEvent;
			import com.esri.ags.events.GeoprocessorEvent;
			import com.esri.ags.events.MapMouseEvent;
			import com.esri.ags.events.QueryEvent;
			import com.esri.ags.geometry.MapPoint;
			import com.esri.ags.symbols.SimpleFillSymbol;
			import com.esri.ags.symbols.SimpleLineSymbol;
			import com.esri.ags.symbols.SimpleMarkerSymbol;
			import com.esri.ags.tasks.supportClasses.ParameterValue;
			
			[Bindable]public var grRelationArray1:Array = [];
			
			[Bindable]public var blockPointGeometries:Array = [];
			
			private function onMapClick(event:MapMouseEvent):void
			{
				graphicsLayer.clear();
				var mapPoint:MapPoint = event.mapPoint;
				var graphic:Graphic = new Graphic(mapPoint);
				graphic.symbol = new SimpleMarkerSymbol("cross", 10, 0, 1, 0, 0, 0, new SimpleLineSymbol("solid", 0, 1, 2));
				graphicsLayer.add(graphic);
				
				// getting the drive time polygon
				getDriveTimePolygon(mapPoint);
			}
			
			private function getDriveTimePolygon(mapPoint:MapPoint):void
			{
				var graphic:Graphic = new Graphic(mapPoint);
				var featureSet:FeatureSet = new FeatureSet();
				featureSet.features = [ graphic ];
				var params:Object = {
					"Input_Location": featureSet,
					"Drive_Times": 2,
					"env:outSR": 102100 /* make sure returned geometry is in WebMercator */
				};
				
				// execute gp task to get the drive time polygon
				gp.execute(params);
			}
			
			private function onGPExecuteComplete(event:GeoprocessorEvent):void
			{
				// Note: As of version 2.0, the executeResult property name changed from 'parameterValues' to 'results'
				var parameterValue:ParameterValue = event.executeResult.results[0];
				var fset:FeatureSet = FeatureSet(parameterValue.value);
				var drivetimeGraphic:Graphic = fset.features[0];
				var symbol:SimpleFillSymbol = new SimpleFillSymbol(SimpleFillSymbol.STYLE_SOLID, 0xFF0000, 0.1);
				symbol.outline = new SimpleLineSymbol(SimpleLineSymbol.STYLE_SOLID, 0xFF0000, 1.0, 2);
				drivetimeGraphic.symbol = symbol;
				graphicsLayer.add(drivetimeGraphic);
				
				// geometry to be used in finding spatial relationship
				grRelationArray1.push(drivetimeGraphic.geometry);
				
				// setting the extent of the map to the extent of returned drive time polygon
				myMap.extent = drivetimeGraphic.geometry.extent;
				
				// query the map extent
				query.geometry = myMap.extent;
				query.outSpatialReference = myMap.spatialReference;
				queryTask.execute(query);
			}
			
			private function onQueryExecuteComplete(event:QueryEvent):void
			{
				var symbol:SimpleMarkerSymbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.STYLE_SQUARE, 8, 0xFFFF00, 0.5);
				symbol.outline = new SimpleLineSymbol();
				
				var blockpointsFeatureSet:FeatureSet = event.featureSet;
				for (var i:Number = 0; i < blockpointsFeatureSet.features.length; i++)
				{
					blockpointsFeatureSet.features[i].symbol = symbol;
					graphicsLayer.add(blockpointsFeatureSet.features[i]);
					// get the features(geometries) within the current map extent
					blockPointGeometries.push(blockpointsFeatureSet.features[i].geometry);
				}
				
				calculateSpatialRelationship();
			}
			
			private function calculateSpatialRelationship():void
			{
				// find which geometries are 'within' the  drive time polygon
				relationParameters.geometries1 = blockPointGeometries;
				relationParameters.geometries2 = grRelationArray1;
				relationParameters.spatialRelationship = RelationParameters.SPATIAL_REL_WITHIN;
				
				// Note: As of version 2.0, relation() takes a RelationParameters object.
				gs.relation(relationParameters);
			}
			
			private function relationCompleteHandler(event:GeometryServiceEvent):void
			{
				for each (var obj:Object in event.result)
				{
					// gives the geometries within the polygon.
					for (var i:Number = 0; i < graphicsLayer.numGraphics; i++)
					{
						if (Graphic(graphicsLayer.getChildAt(i)).geometry is MapPoint)
						{
							if (MapPoint(Graphic(graphicsLayer.getChildAt(i)).geometry).x == MapPoint(obj.geometry1).x && MapPoint(Graphic(graphicsLayer.getChildAt(i)).geometry).y == MapPoint(obj.geometry1).y)
							{
								Graphic(graphicsLayer.getChildAt(i)).symbol = new SimpleMarkerSymbol(SimpleMarkerSymbol.STYLE_SQUARE, 8, 0x0000FF, 1);
							}
						}
					}
				}
				messages.htmlText = "<b>The total number of features within the drive time polygon are <i><u>" + (event.result as Array).length + "</u></i>.</b>";
			}
		]]>
	</fx:Script>
	
	<!-- Start Declarations -->
	<fx:Declarations>
		<esri:Geoprocessor id="gp"
						   concurrency="last"
						   executeComplete="onGPExecuteComplete(event)"
						   url="http://sampleserver1.arcgisonline.com/ArcGIS/rest/services/Network/ESRI_DriveTime_US/GPServer/CreateDriveTimePolygons"
						   useAMF="false"/>
		
		<esri:QueryTask id="queryTask"
						concurrency="last"
						executeComplete="onQueryExecuteComplete(event)"
						url="http://sampleserver1.arcgisonline.com/ArcGIS/rest/services/Demographics/ESRI_Census_USA/MapServer/0"
						useAMF="false"/>
		
		<esri:Query id="query" returnGeometry="true">
			<esri:outFields>
				<fx:String>POP2000</fx:String>
			</esri:outFields>
		</esri:Query>
		
		<esri:GeometryService id="gs"
							  relationComplete="relationCompleteHandler(event)"
							  url="http://localhost:8777/giserver/rest/service/GeometryService"/>
		
		<esri:RelationParameters id="relationParameters"/>
	</fx:Declarations>
	<!-- End Declarations -->
	
	<s:Label fontSize="12"
			 fontWeight="bold"
			 text="Click the map to execute a 2 minute drive time and find features within it."
			 width="100%"/>
	
	<mx:Text id="messages"
			 color="0xFFFFFF"
			 fontSize="12"
			 fontWeight="bold"
			 width="100%"/>
	
	<esri:Map id="myMap" mapClick="onMapClick(event)">
		<esri:extent>
			<esri:Extent xmin="-10605000" ymin="4712000" xmax="-10601000" ymax="4718000">
				<esri:SpatialReference wkid="102100"/>
			</esri:Extent>
		</esri:extent>
		<esri:ArcGISTiledMapServiceLayer url="http://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer"/>
		<esri:GraphicsLayer id="graphicsLayer"/>
	</esri:Map>
</s:Application>